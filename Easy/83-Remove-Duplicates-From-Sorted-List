/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        
        ListNode* list = head;
        
        while(list!=NULL && list->next!=NULL) { // Make sure that current and next value are not null
            if(list->val==list->next->val) {
                list->next = list->next->next; // Condition only if duplicate
            }
            else {
                list = list->next; // Otherwise, traverse
            }
        }
        return head;
    }
};
